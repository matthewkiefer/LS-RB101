# easy_8.rb
require "pry"

# Sum of Sums
# Array of numbers, sum up sequences generated by starting on each number and adding to the end
# Let's try this recursively

# Sum of array, calling sum of array - 1
# if size = 1, return value

# def sum_of_sums(numbers)
#   if numbers.one?
#     return numbers[0]
#   else
#     return numbers.sum + (sum_of_sums(numbers[0..numbers.size-2]))
#   end
# end

# p sum_of_sums([3, 5, 2]) == (3) + (3 + 5) + (3 + 5 + 2) # -> (21)
# p sum_of_sums([1, 5, 7, 3]) == (1) + (1 + 5) + (1 + 5 + 7) + (1 + 5 + 7 + 3) # -> (36)
# p sum_of_sums([0]) == 0
# p sum_of_sums([1, 2, 3, 4, 5]) == 35

# Madlibs

def madlib
  print "Enter a noun: "
  noun = gets.chomp
  print "Enter a verb: "
  verb = gets.chomp
  print "Enter an adjective: "
  adjective = gets.chomp
  print "Enter an adverb: "
  adverb = gets.chomp

  puts "The #{noun} wants to #{verb} #{adverb} but runs into the same #{adjective} problem."
end

madlib